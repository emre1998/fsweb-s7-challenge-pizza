{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _utils = require(\"./utils\");\nvar _excluded = [\"className\", \"cssModule\", \"size\", \"vertical\", \"tag\"];\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar propTypes = {\n  /** Aria label */\n  'aria-label': _propTypes[\"default\"].string,\n  /** Add custom class */\n  className: _propTypes[\"default\"].string,\n  /** Change underlying component's CSS base class name */\n  cssModule: _propTypes[\"default\"].object,\n  /** In order for assistive technologies (such as screen readers) to convey that a series of buttons is grouped, an appropriate role attribute needs to be provided. For button groups, this would be role=\"group\", while toolbars should have a role=\"toolbar\". */\n  role: _propTypes[\"default\"].string,\n  /** Make the button bigger or smaller */\n  size: _propTypes[\"default\"].string,\n  /** Set a custom element for this component */\n  tag: _utils.tagPropType,\n  /** Make button group vertical */\n  vertical: _propTypes[\"default\"].bool\n};\nvar defaultProps = {\n  tag: 'div',\n  role: 'group'\n};\nfunction ButtonGroup(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    size = props.size,\n    vertical = props.vertical,\n    Tag = props.tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = (0, _utils.mapToCssModules)((0, _classnames[\"default\"])(className, size ? 'btn-group-' + size : false, vertical ? 'btn-group-vertical' : 'btn-group'), cssModule);\n  return /*#__PURE__*/_react[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\nButtonGroup.propTypes = propTypes;\nButtonGroup.defaultProps = defaultProps;\nvar _default = ButtonGroup;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}